import matplotlib.pyplot as plt
import numpy as np

# Aufgabenteil b)
e_1z, t_1z = np.genfromtxt('durchlauf/1kbt-b-zufall.txt', unpack=True)
e_2z, t_2z = np.genfromtxt('durchlauf/2kbt-b-zufall.txt', unpack=True)
e_3z, t_3z = np.genfromtxt('durchlauf/3kbt-b-zufall.txt', unpack=True)
e_1f, t_1f = np.genfromtxt('durchlauf/1kbt-b-fest.txt', unpack=True)
e_2f, t_2f = np.genfromtxt('durchlauf/2kbt-b-fest.txt', unpack=True)
e_3f, t_3f = np.genfromtxt('durchlauf/3kbt-b-fest.txt', unpack=True)
plt.plot(t_1z, e_1z, 'g-', label=r'$1k_BT$, Zufall')
plt.plot(t_2z, e_2z, 'r--', label=r'$2k_BT$, Zufall')
plt.plot(t_3z, e_3z, 'b-', label=r'$3k_BT$, Zufall')
plt.plot(t_1f, e_1f, 'g--', label=r'$1k_BT$, fest')
plt.plot(t_2f, e_2f, 'r-', label=r'$2k_BT$, fest')
plt.plot(t_3f, e_3f, 'b--', label=r'$3k_BT$, fest')

plt.xlabel(r'Simulationszeit $t$')
plt.ylabel(r'mittlere Energie pro Spin $e(t)$')
plt.legend(loc='best')

plt.tight_layout(pad=0, h_pad=1.08, w_pad=1.08)
plt.savefig('durchlauf/plot_b.pdf')
plt.close()


# Aufgabenteil c)
m, m_abs, temp_m = np.genfromtxt('durchlauf/m(T).txt', unpack=True)
plt.axvline(x=2.27, ymin=0, ymax=1, color='r', label=r'$k_BT_c$')
plt.plot(temp_m, m, 'kx', label=r'$\langle m\rangle$')
plt.plot(temp_m, m, 'k--')
plt.plot(temp_m, m_abs, 'b.', label=r'$\langle |m|\rangle$')
plt.plot(temp_m, m_abs, 'b--')
plt.xlabel(r'Temperatur $k_BT$')
plt.ylabel(r'mittlere Magnetisierung pro Spin $m(T)$')
plt.legend(loc='best')
plt.tight_layout(pad=0, h_pad=1.08, w_pad=1.08)
plt.savefig('durchlauf/plot_c_mT.pdf')
plt.close()

m_1, m_abs1, t_1 = np.genfromtxt('durchlauf/m(t)-1kbt.txt', unpack=True)
m_2, m_abs2, t_2 = np.genfromtxt('durchlauf/m(t)-2kbt.txt', unpack=True)
m_3, m_abs3, t_3 = np.genfromtxt('durchlauf/m(t)-3kbt.txt', unpack=True)
plt.plot(t_1, m_1, 'g-', label=r'$1k_BT$')
plt.plot(t_2, m_2, 'r-', label=r'$2k_BT$')
plt.plot(t_3, m_3, 'b-', label=r'$3k_BT$')
plt.xlabel(r'Simulationszeit $t$')
plt.ylabel(r'mittlere Magnetisierung pro Spin $m(t)$')
plt.legend(loc='best')
plt.tight_layout(pad=0, h_pad=1.08, w_pad=1.08)
plt.savefig('durchlauf/plot_c_m.pdf')
plt.close()

plt.plot(t_1, m_abs1, 'g-', label=r'$1k_BT$')
plt.plot(t_2, m_abs2, 'r-', label=r'$2k_BT$')
plt.plot(t_3, m_abs3, 'b-', label=r'$3k_BT$')
plt.xlabel(r'Simulationszeit $t$')
plt.ylabel(r'mittlerer Betrag der Magnetisierung pro Spin $m(t)$')
plt.legend(loc='best')
plt.tight_layout(pad=0, h_pad=1.08, w_pad=1.08)
plt.savefig('durchlauf/plot_c_absm.pdf')
plt.close()

e_1c, t_1c = np.genfromtxt('durchlauf/e(t)-1kbt.txt', unpack=True)
e_2c, t_2c = np.genfromtxt('durchlauf/e(t)-2kbt.txt', unpack=True)
e_3c, t_3c = np.genfromtxt('durchlauf/e(t)-3kbt.txt', unpack=True)
plt.plot(t_1c, e_1c, 'g-', label=r'$1k_BT$')
plt.plot(t_2c, e_2c, 'r-', label=r'$2k_BT$')
plt.plot(t_3c, e_3c, 'b-', label=r'$3k_BT$')
plt.xlabel(r'Simulationszeit $t$')
plt.ylabel(r'mittlere Energie pro Spin $e(t)$')
plt.legend(loc='best')
plt.tight_layout(pad=0, h_pad=1.08, w_pad=1.08)
plt.savefig('durchlauf/plot_c_e.pdf')
plt.close()
